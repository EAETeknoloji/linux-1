/dts-v1/;

#include "bcm2710.dtsi"

/ {
	model = "Raspberry Pi Compute Module 3";
};

&gpio {
	sdhost_pins: sdhost_pins {
		brcm,pins = <48 49 50 51 52 53>;
		brcm,function = <4>; /* alt0 */
		brcm,pull = <0 2 2 2 2 2>;
	};

	spi0_pins: spi0_pins {
		brcm,pins = <9 10 11>;
		brcm,function = <4>; /* alt0 */
	};

	spi0_cs_pins: spi0_cs_pins {
		brcm,pins = <8 7>;
		brcm,function = <1>; /* output */
	};

	i2c0_pins: i2c0 {	/* kullanılmıyor */
		brcm,pins;
		brcm,function;
	};

	i2c1_pins: i2c1 {			/* touch icin kullanılacak */
		brcm,pins = <44 45>;	/* SDA GPIO44, SCL GPIO45 */
		brcm,function = <6>; /* alt2, sda,scl */
	};

	i2s_pins: i2s {
		brcm,pins = <18 19 20 21>;
		brcm,function = <4>; /* alt0 */
	};

	uart1_pins: uart1_pins { /* RS232/485 */	
		brcm,pins = <32 33>;
		brcm,function = <2>; /* alt5=UART1 */
		brcm,pull = <0 0>;
	};

	uart0_pins: uart0_pins { /* knx uart */
		brcm,pins = <36 37>;
		brcm,function = <6>; /* alt2=UART0 */
		brcm,pull = <0 0>;
	};

	audio_pins: audio_pins { /* kullanılmıyor */
		brcm,pins;
		brcm,function;
	};
};

&sdhost {
	pinctrl-names = "default";
	pinctrl-0 = <&sdhost_pins>;
	non-removable;
	bus-width = <4>;
	status = "okay";
	brcm,overclock-50 = <0>;
};

&soc {
	virtgpio: virtgpio {
		compatible = "brcm,bcm2835-virtgpio";
		gpio-controller;
		#gpio-cells = <2>;
		firmware = <&firmware>;
		status = "okay";
	};

	expgpio: expgpio {
		compatible = "brcm,bcm2835-expgpio";
		gpio-controller;
		#gpio-cells = <2>;
		firmware = <&firmware>;
		status = "okay";
	};
};

&fb {
	status = "okay";
};

&spi0 {
	pinctrl-names = "default";
	pinctrl-0 = <&spi0_pins &spi0_cs_pins>;
	cs-gpios = <&gpio 8 1>, <&gpio 7 1>;

	spidev0: spidev@0{
		compatible = "spidev";
		reg = <0>;	/* CE0 */
		#address-cells = <1>;
		#size-cells = <0>;
		spi-max-frequency = <125000000>;
	};

	spidev1: spidev@1{
		compatible = "spidev";
		reg = <1>;	/* CE1 */
		#address-cells = <1>;
		#size-cells = <0>;
		spi-max-frequency = <125000000>;
	};
};

&i2c0 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c0_pins>;
	clock-frequency = <100000>;
};

&i2c1 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c1_pins>;
	clock-frequency = <50000>;	/* 50kHz for mxt1664 Touch Screen */
};

&i2c2 {
	clock-frequency = <100000>;
};

&i2s {
	pinctrl-names = "default";
	pinctrl-0 = <&i2s_pins>;
};

&leds {
	act_led: act {
		label = "led0";
		linux,default-trigger = "mmc0";
		gpios = <&virtgpio 0 0>;
	};
};

&hdmi {
	hpd-gpios = <&expgpio 0 GPIO_ACTIVE_LOW>;
};

&audio {
	pinctrl-names = "default";
	pinctrl-0 = <&audio_pins>;
};

&uart0 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart0_pins>;
	status = "okay";
};

&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart1_pins>;
	status = "okay";
};

/ {
	__overrides__ {
		uart0 = <&uart0>,"status";
		uart1 = <&uart1>,"status";
		i2s = <&i2s>,"status";
		spi = <&spi0>,"status";
		i2c0 = <&i2c0>,"status";
		i2c1 = <&i2c1>,"status";
		i2c2_iknowwhatimdoing = <&i2c2>,"status";
		i2c0_baudrate = <&i2c0>,"clock-frequency:0";
		i2c1_baudrate = <&i2c1>,"clock-frequency:0";
		i2c2_baudrate = <&i2c2>,"clock-frequency:0";

		act_led_gpio = <&act_led>,"gpios:4";
		act_led_activelow = <&act_led>,"gpios:8";
		act_led_trigger = <&act_led>,"linux,default-trigger";

		audio = <&audio>,"status";
		watchdog = <&watchdog>,"status";
		random = <&random>,"status";
		sd_overclock = <&sdhost>,"brcm,overclock-50:0";
		sd_force_pio = <&sdhost>,"brcm,force-pio?";
		sd_pio_limit = <&sdhost>,"brcm,pio-limit:0";
		sd_debug     = <&sdhost>,"brcm,debug";
	};
};
